variables:
  REGION: us-east-1
  APP_NAME: pt-site-next
  REGISTRATION_TOKEN: $REGISTRATION_TOKEN
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  GIT_SSL_NO_VERIFY: "1"
  ECR_REGISTRY: 139539663033.dkr.ecr.us-east-1.amazonaws.com
  BASE_ECR_IMAGE: ${ECR_REGISTRY}/peopleticker/pt-site-next
  ECR_IMAGE: ${BASE_ECR_IMAGE}:dev-${CI_COMMIT_SHA}
  AWS_DEFAULT_REGION: us-east-1

stages:
  - build
  - deploy

.ecr-login: &ecr-login |
  docker login --username AWS -p $(aws ecr get-login-password --region ${REGION}) ${ECR_REGISTRY}

.common-opts:
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  tags:
    - docker_build
  before_script:
    - apk add --no-cache git aws-cli curl
    - curl -fsSL https://get.pulumi.com | sh
    - PATH=$PATH:/root/.pulumi/bin


# test job
# test:
#   stage: test
#   image: docker:20.10.16
#   services:
#     - docker:20.10.16-dind
#   tags:
#     - docker_build
#   before_script:
#     - apk add --no-cache docker-cli
#     - apk add --no-cache git
#   script:
#     - docker buildx build --build-arg NEXT_PUBLIC_LOGIN_URL=https://www.google.com --build-arg NEXT_PUBLIC_LIBRARY_URL=https://www.google.com --build-arg NEXT_PUBLIC_STRIPE_PK=test --platform linux/amd64 --target test -t ${BASE_ECR_IMAGE} -f ./Dockerfile .
#     - docker run -t --rm ${BASE_ECR_IMAGE} # To run unit tests by running the container against the test stage

# Build stage
build:
  stage: build
  extends: .common-opts
  script: 
    - *ecr-login
    - docker buildx build --build-arg NEXT_PUBLIC_LOGIN_URL=https://www.google.com --build-arg NEXT_PUBLIC_LIBRARY_URL=https://www.google.com --build-arg NEXT_PUBLIC_STRIPE_PK=test --platform linux/amd64 --target prod -t ${ECR_IMAGE} -f ./Dockerfile .
    - docker push ${ECR_IMAGE}

auto-dev:
  stage: deploy
  extends: .common-opts
  environment: dev
  when: on_success
  rules:
    - if: $CI_COMMIT_BRANCH == "pipelinev3"
  script: echo "Dev autp buildBuild"

dev:
  stage: deploy
  extends: .common-opts
  environment: dev
  when: manual
  rules:
    - if: $CI_COMMIT_BRANCH != "pipelinev3"
  script: echo "Dev Build"

qa:
  stage: deploy
  extends: .common-opts
  environment: qa
  when: manual
  script: echo "Dev Build"

prod:
  stage: deploy
  extends: .common-opts
  environment: prod
  when: manual
  rules:
    - if: $CI_COMMIT_BRANCH == "pipelinev3"
  script: echo "Deploy Job!"
